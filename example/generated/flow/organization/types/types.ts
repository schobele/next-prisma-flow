// @generated by next-prisma-flow-state-engine
// file: types/types.ts

import type { Prisma } from "@prisma/client";
import type {
  OrganizationDeepSelect,
  OrganizationListSelect,
  OrganizationShallowSelect,
} from "../server/selects";

// Type aliases for Organization with different select levels
export type OrganizationWithRelations = Prisma.OrganizationGetPayload<{
  select: typeof OrganizationDeepSelect;
}>;

export type OrganizationListItem = Prisma.OrganizationGetPayload<{
  select: typeof OrganizationListSelect;
}>;

export type OrganizationShallow = Prisma.OrganizationGetPayload<{
  select: typeof OrganizationShallowSelect;
}>;

// Input type helpers
export type OrganizationCreateInput = Prisma.OrganizationCreateInput;
export type OrganizationUpdateInput = Prisma.OrganizationUpdateInput;
export type OrganizationWhereInput = Prisma.OrganizationWhereInput;
export type OrganizationWhereUniqueInput = Prisma.OrganizationWhereUniqueInput;
export type OrganizationOrderByInput =
  Prisma.OrganizationOrderByWithRelationInput;

// Relation type helpers
export type OrganizationWithAuthors = OrganizationWithRelations & {
  authors: NonNullable<OrganizationWithRelations["authors"]>;
};
export type OrganizationWithPosts = OrganizationWithRelations & {
  posts: NonNullable<OrganizationWithRelations["posts"]>;
};
export type OrganizationWithComments = OrganizationWithRelations & {
  comments: NonNullable<OrganizationWithRelations["comments"]>;
};
export type OrganizationWithTags = OrganizationWithRelations & {
  tags: NonNullable<OrganizationWithRelations["tags"]>;
};

// Utility types
export type OrganizationId = OrganizationWithRelations["id"];
export type PartialOrganization = Partial<OrganizationWithRelations>;
export type OrganizationKeys = keyof OrganizationWithRelations;

// Pagination types
export type OrganizationPage = {
  items: OrganizationListItem[];
  total: number;
  page: number;
  pageSize: number;
  totalPages: number;
};

export type OrganizationCursor = {
  items: OrganizationListItem[];
  nextCursor?: OrganizationWhereUniqueInput;
  hasMore: boolean;
};
