// This file is auto-generated by Next Prisma Flow Generator.
// Do not edit this file manually as it will be overwritten.
// Generated at: 2025-06-07T12:32:18.080Z

// Consolidated type exports for all models

export * from './user/types';
export * from './category/types';
export * from './todo/types';

// Common utility types
export interface ApiError {
  message: string;
  code?: string;
  field?: string;
}

export interface ApiResponse<T = any> {
  data?: T;
  success: boolean;
  message?: string;
  errors?: ApiError[];
}

export interface ListApiResponse<T = any> extends ApiResponse<T[]> {
  pagination?: {
    page: number;
    limit: number;
    total: number;
    totalPages: number;
  };
}

export interface MutationResponse<T = any> extends ApiResponse<T> {
  // Specific to mutations
}

export interface BatchResponse extends ApiResponse {
  count: number;
}

// Form types
export interface FormField<T = any> {
  value: T;
  onChange: (value: T) => void;
  onBlur: () => void;
  error?: string;
  required: boolean;
  name: string;
}

export interface FormState<T = any> {
  data: Partial<T>;
  isValid: boolean;
  isDirty: boolean;
  errors: Record<string, string>;
  loading: boolean;
  error: Error | null;
}

// Optimistic update types
export interface OptimisticUpdate<T = any> {
  id: string;
  data: Partial<T>;
  timestamp: number;
  operation: 'create' | 'update' | 'delete';
}

// State management types
export interface LoadingStates {
  [key: string]: boolean;
}

export interface EntityState<T = any> {
  items: Record<string, T>;
  loading: boolean;
  creating: boolean;
  updating: LoadingStates;
  deleting: LoadingStates;
  error: string | null;
  optimisticUpdates: Record<string, OptimisticUpdate<T>>;
}
