// @generated by next-prisma-flow-state-engine
// file: types/types.ts

import type { Prisma } from "../../prisma";
import type {
  PostDeepSelect,
  PostListSelect,
  PostShallowSelect,
} from "../server/selects";

// Type aliases for Post with different select levels
export type PostWithRelations = Prisma.PostGetPayload<{
  select: typeof PostDeepSelect;
}>;

export type PostListItem = Prisma.PostGetPayload<{
  select: typeof PostListSelect;
}>;

export type PostShallow = Prisma.PostGetPayload<{
  select: typeof PostShallowSelect;
}>;

// Input type helpers
export type PostCreateInput = Prisma.PostCreateInput;
export type PostUpdateInput = Prisma.PostUpdateInput;
export type PostWhereInput = Prisma.PostWhereInput;
export type PostWhereUniqueInput = Prisma.PostWhereUniqueInput;
export type PostOrderByInput = Prisma.PostOrderByWithRelationInput;

// Relation type helpers
export type PostWithAuthor = PostWithRelations & {
  author: NonNullable<PostWithRelations["author"]>;
};
export type PostWithComments = PostWithRelations & {
  comments: NonNullable<PostWithRelations["comments"]>;
};

// Utility types
export type PostId = PostWithRelations["id"];
export type PartialPost = Partial<PostWithRelations>;
export type PostKeys = keyof PostWithRelations;

// Pagination types
export type PostPage = {
  items: PostListItem[];
  total: number;
  page: number;
  pageSize: number;
  totalPages: number;
};

export type PostCursor = {
  items: PostListItem[];
  nextCursor?: PostWhereUniqueInput;
  hasMore: boolean;
};
