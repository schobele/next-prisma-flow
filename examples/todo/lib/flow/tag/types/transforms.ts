// @generated by next-prisma-flow-state-engine
// file: types/transforms.ts

import type { Prisma } from "../../prisma";
import type { FlowTagCreate, FlowTagUpdate } from "./schemas";

export function transformTagCreate(
  input: FlowTagCreate,
): Prisma.TagCreateInput {
  const result: any = {};

  result.name = input.name;
  if ("color" in input && input.color !== undefined) {
    result.color = input.color;
  }
  if ("createdAt" in input && input.createdAt !== undefined) {
    result.createdAt = input.createdAt;
  }
  if (input.todos !== undefined) {
    const todosData = input.todos;
    if (todosData) {
      if ("connect" in todosData && todosData.connect) {
        result.todos = { connect: todosData.connect };
      } else if ("create" in todosData && todosData.create) {
        result.todos = {
          create: todosData.create as any,
        };
      } else if ("createMany" in todosData && todosData.createMany) {
      } else if ("connectOrCreate" in todosData && todosData.connectOrCreate) {
        result.todos = {
          connectOrCreate: todosData.connectOrCreate as any,
        };
      }
    }
  }
  // Handle company_relation foreign key when relation is not configured
  if (
    "companyId" in input &&
    input.companyId !== undefined &&
    input.companyId !== null
  ) {
    result.company_relation = { connect: { id: input.companyId } };
  }

  return result;
}

export function transformTagUpdate(
  input: FlowTagUpdate,
): Prisma.TagUpdateInput {
  const result: any = {};

  const nameValue = input.name;
  if (nameValue !== undefined && nameValue !== null) {
    result.name = nameValue;
  }
  const colorValue = input.color;
  if (colorValue !== undefined && colorValue !== null) {
    result.color = colorValue;
  }
  const createdAtValue = input.createdAt;
  if (createdAtValue !== undefined && createdAtValue !== null) {
    result.createdAt = createdAtValue;
  }
  if (input.todos !== undefined) {
    const todosData = input.todos;
    if (todosData) {
      result.todos = todosData as any;
    }
  }

  return result;
}
