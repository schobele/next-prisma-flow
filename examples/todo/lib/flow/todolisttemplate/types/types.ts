// @generated by next-prisma-flow-state-engine
// file: types/types.ts

import type { Prisma } from "../../prisma";
import type {
  TodoListTemplateSelect,
  TodoListTemplateScalarSelect,
} from "../server/selects";

// Type aliases for TodoListTemplate with different select levels
export type TodoListTemplateWithRelations = Prisma.TodoListTemplateGetPayload<{
  select: typeof TodoListTemplateSelect;
}>;

export type TodoListTemplateListItem = Prisma.TodoListTemplateGetPayload<{
  select: typeof TodoListTemplateSelect;
}>;

export type TodoListTemplateShallow = Prisma.TodoListTemplateGetPayload<{
  select: typeof TodoListTemplateScalarSelect;
}>;

// Input type helpers
export type TodoListTemplateCreateInput = Prisma.TodoListTemplateCreateInput;
export type TodoListTemplateUpdateInput = Prisma.TodoListTemplateUpdateInput;
export type TodoListTemplateWhereInput = Prisma.TodoListTemplateWhereInput;
export type TodoListTemplateWhereUniqueInput =
  Prisma.TodoListTemplateWhereUniqueInput;
export type TodoListTemplateOrderByInput =
  Prisma.TodoListTemplateOrderByWithRelationInput;

// Utility types
export type TodoListTemplateId = TodoListTemplateWithRelations["id"];
export type PartialTodoListTemplate = Partial<TodoListTemplateWithRelations>;
export type TodoListTemplateKeys = keyof TodoListTemplateWithRelations;

// Pagination types
export type TodoListTemplatePage = {
  items: TodoListTemplateListItem[];
  total: number;
  page: number;
  pageSize: number;
  totalPages: number;
};

export type TodoListTemplateCursor = {
  items: TodoListTemplateListItem[];
  nextCursor?: TodoListTemplateWhereUniqueInput;
  hasMore: boolean;
};
