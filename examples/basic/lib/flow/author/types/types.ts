// @generated by next-prisma-flow-state-engine
// file: types/types.ts

import type { Prisma } from "../../prisma";
import type { AuthorSelect, AuthorScalarSelect } from "../server/selects";

// Type aliases for Author with different select levels
export type AuthorWithRelations = Prisma.AuthorGetPayload<{
  select: typeof AuthorSelect;
}>;

export type AuthorListItem = Prisma.AuthorGetPayload<{
  select: typeof AuthorSelect;
}>;

export type AuthorShallow = Prisma.AuthorGetPayload<{
  select: typeof AuthorScalarSelect;
}>;

// Input type helpers
export type AuthorCreateInput = Prisma.AuthorCreateInput;
export type AuthorUpdateInput = Prisma.AuthorUpdateInput;
export type AuthorWhereInput = Prisma.AuthorWhereInput;
export type AuthorWhereUniqueInput = Prisma.AuthorWhereUniqueInput;
export type AuthorOrderByInput = Prisma.AuthorOrderByWithRelationInput;

// Relation type helpers
export type AuthorWithPosts = AuthorWithRelations & {
  posts: NonNullable<AuthorWithRelations["posts"]>;
};

// Utility types
export type AuthorId = AuthorWithRelations["id"];
export type PartialAuthor = Partial<AuthorWithRelations>;
export type AuthorKeys = keyof AuthorWithRelations;

// Pagination types
export type AuthorPage = {
  items: AuthorListItem[];
  total: number;
  page: number;
  pageSize: number;
  totalPages: number;
};

export type AuthorCursor = {
  items: AuthorListItem[];
  nextCursor?: AuthorWhereUniqueInput;
  hasMore: boolean;
};
